	
digraph G { 
BB1[shape=record, label="<b>BB1| {2: \<Function thisFunc\>|6: write y(5)|7: addi  x(4) #456|8: write y(7)|9: read()|10: read()|11: read()}"];
BB2[shape=record, label="<b>BB2| {12: \<IF_0\>|17: cmp  a(9) b(10)|18: bne (17) ELSE_0(14)}"];
BB3[shape=record, label="<b>BB3| {13: \<THEN_0\>|19: add  b(10) y(7)|20: bra  JOIN_IF_0(15)}"];
BB4[shape=record, label="<b>BB4| {14: \<ELSE_0\>|21: addi  x(4) #2}"];
BB5[shape=record, label="<b>BB5| {15: \<JOIN_IF_0\>|22: phi  c(19) c(21)|23: phi  b(19) b(10)|24: phi  c(21) c(11)}"];
BB6[shape=record, label="<b>BB6| {16: \<END_IF_0\>|25: sub  b(23) a(9)|26: ret (3)}"];

BB0 [shape=record, label="<b>BB0 | {\<CONST\>|-5: const 15 |-4: const 2 |-3: const 456 |0: const 0 |1: const 1 |\<MAIN\>|\<WARNING: Use of UNDECLARED variable: z\>|27: write #z(0)|\<WARNING: Use of UNINITIALIZED variable: a\>|30: store  Return(29) (3)}"];
BB7[shape=record, label="<b>BB7| {28: \<Call thisFunc\>|31: move (0) (3)|32: move (1) (4)|33: bra  thisFunc}"];
BB8[shape=record, label="<b>BB8| {29: \<Return thisFunc\>|34: return  z(25)|35: muli  a(34) #2|\<CSE: muli a(34) #(2)\>}"];
BB9[shape=record, label="<b>BB9| {39: \<JOIN_WHILE_0\>|45: phi  b(35) b(44)|46: phi  a(34) a(44)}"];
BB10[shape=record, label="<b>BB10| {37: \<WHILE_0\>|41: cmpi  a(46) #0|42: ble (41) END_WHILE_0(40)}"];
BB11[shape=record, label="<b>BB11| {38: \<DO_0\>|43: mul  b(45) c(35)|44: add  a(46) (43)|47: bra  JOIN_WHILE_0(39)}"];
BB12[shape=record, label="<b>BB12| {40: \<END_WHILE_0\>|48: write a(46)|\<END.\>}"];


BB1:s -> BB2:n [label="fall-through(cond)"];
BB2:s -> BB3:n [label="fall-through"];
BB2:s -> BB4:n [label="branch"];
BB3:s -> BB5:n [label="branch"];
BB4:s -> BB5:n [label="fall-through"];
BB5:s -> BB6:n [label="fall-thorough(out)"];
BB0:s -> BB7:n [label="fall-thorough"];
BB7:s -> BB8:n [label="return"];
BB7:sw -> BB1:e [label="Call Function", color=orange, weight=0];
BB8:s -> BB9:n [label="fall-thorough"];
BB9:s -> BB10:n [label="fall-thorough"];
BB10:s -> BB11:n [label="fall-thorough",color=green];
BB11:s -> BB9:n [label="branch",color=red];
BB10:s -> BB12:n [label="branch",color=blue];

	{rank=same; BB0;BB1;}
}


	


